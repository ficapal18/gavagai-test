import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';
import ReactJson from 'react-json-view'

//const url = "https://api.gavagai.se/v3/languages?apiKey=37be75f21f7d65146da496a8fc882164";
//const url_keywords = "https://api.gavagai.se/v3/keywords?apiKey=37be75f21f7d65146da496a8fc882164";
const url = "https://api.gavagai.se/v3/languages?apiKey=37be75f21f7d65146da496a8fc882164";
const url_keywords = "https://api.gavagai.se/v3/keywords?apiKey=37be75f21f7d65146da496a8fc882164";
const url_tonality = "https://api.gavagai.se/v3/keywords?apiKey=37be75f21f7d65146da496a8fc882164";

const string_json_sample = '{"numberOfKeywords":4,"keywords":[{"term":"the dish","occurrences":2,"documentFrequency":0}]}'

class App extends Component {

  constructor(props){
    super(props)
    this.state = {}
    this.setState({
        reload: true
      })
  }

  componentDidMount(){
    //if (this.state.reload == true){
      // Get the available languages
      fetch(url)
      .then(d => d.json())
      .then(d => {this.setState({
          data: d
        })
      })
    //}
  }

  openFile(event, this_){
    var input = event.target;
    var reader = new FileReader();

    reader.onload = function(){
      var text = reader.result;
      this_.setState({file_text: text})
      //var node = document.getElementById('output');
      //node.innerText = text;
      console.log(reader.result.substring(0, 200));
      console.log('File opened');
    };

    reader.readAsText(input.files[0]);
  }

POSTKeywords(this_){
  //if (this.state.reload == true){
    var body_text = this_.state.file_text
    fetch(url_keywords, {
    method: 'POST',
    headers: {
      Accept: 'application/json;charset=UTF-8',
      'Content-Type': 'application/json',
    },body: JSON.stringify({"language":"en", "significantTerms":1, "texts": [ { "id":"1" , "title":"Title" , "body": body_text,}]
    }),
    }).then((response) => response.json())
      .then((responseJson) => {
        console.log(JSON.stringify(responseJson));
        this.setState({
          keywords: JSON.stringify(responseJson)
        })
    this.setState({reload: false})
    return responseJson.keywords;
    });
  //}
}

POSTTonality(this_){
  //if (this.state.reload == true){
    var body_text = this_.state.file_text
    fetch(url_keywords, {
    method: 'POST',
    headers: {
      Accept: 'application/json;charset=UTF-8',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ "texts":[ { "body":body_text, "uri":"unique identifier 1" }]
    }),
    }).then((response) => response.json())
      .then((responseJson) => {
        console.log(JSON.stringify(responseJson));
        this.setState({
          tonality: JSON.stringify(responseJson)
      })
    return responseJson.keywords;
    });
  //}
}

  /*
  var submitBtn = document.querySelector('button');
  submitBtn.addEventListener('click', submitGist);
  */

  render() {

    /*if(!this.state.data)
      return <p> Loading.. </p>
    */
    return (
      <div className="App">
        <header className="App-header">
          <img src={logo} className="App-logo" alt="logo" />
          <h1 className="App-title">Welcome to our Webpage!</h1>
        </header>
        <p align='left'>
        <p className="App-intro">
          1. To start, please select the file you want to analyze.
        </p>
        <p align='center'><input type='file' accept='text' onChange={ (e) => this.openFile(e, this) }/></p>
        <p className="App-intro">
        2. You should then select its language:
        </p>
        <p><input type="button" onClick={this.POSTKeywords(this)} value="Get Languages"/></p>

        <p>{this.state.file_text}</p>
        <p>{this.state.languages}</p>
        <p>{this.state.keywords}</p>
        </p>


        <p align='left'> Keywords:
        <p></p><ReactJson src={JSON.parse(string_json_sample) }  theme="summerfruit:inverted" iconStyle="circle" enableClipboard="false" displayDataTypes="false"/>
        </p>

        <p align='left'> Tonality:
        <p></p><ReactJson src={JSON.parse(string_json_sample) }  theme="summerfruit:inverted" iconStyle="circle" enableClipboard="false" displayDataTypes="false"/>
        </p>
      </div>




    );
  }
}

export default App;



<p><input type="button" onchange={this.POSTTonality(this)} value="Get Languages"/></p>

<p>{this.state.file_text}</p>
<p>{this.state.languages}</p>
<p>{this.state.keywords}</p>
